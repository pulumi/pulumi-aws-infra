{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es6",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "index.ts",
        "aws.ts",
        "cluster.ts",
        "network.ts",
        "utils.ts",
        "acmpca/index.ts",
        "acmpca/metrics.ts",
        "apigateway/index.ts",
        "apigateway/api.ts",
        "apigateway/metrics.ts",

        "autoscaling/index.ts",
        "autoscaling/autoscaling.ts",
        "autoscaling/launchConfiguration.ts",
        "autoscaling/metrics.ts",
        "autoscaling/schedule.ts",
        "autoscaling/stepScaling.ts",
        "autoscaling/targetTracking.ts",

        "cloudwatch/index.ts",
        "cloudwatch/dashboard.ts",
        "cloudwatch/metric.ts",
        "cloudwatch/metrics.ts",
        "cloudwatch/widget.ts",
        "cloudwatch/widgets_annotations.ts",
        "cloudwatch/widgets_flow.ts",
        "cloudwatch/widgets_graph.ts",
        "cloudwatch/widgets_simple.ts",

        "codebuild/index.ts",
        "codebuild/metrics.ts",
        "cognito/index.ts",
        "cognito/metrics.ts",
        "cloudfront/index.ts",
        "cloudfront/metrics.ts",
        "dynamodb/index.ts",
        "dynamodb/metrics.ts",
        "ebs/index.ts",
        "ebs/metrics.ts",

        "ec2/index.ts",
        "ec2/cidr.ts",
        "ec2/metrics.ts",
        "ec2/securityGroup.ts",
        "ec2/securityGroupRule.ts",
        "ec2/subnet.ts",
        "ec2/vpc.ts",
        "ec2/vpcTopology.ts",

        "ecr/index.ts",
        "ecr/lifecyclePolicy.ts",
        "ecr/repository.ts",
        "ecr/repositoryImage.ts",

        "ecs/index.ts",
        "ecs/cluster.ts",
        "ecs/container.ts",
        "ecs/ec2Service.ts",
        "ecs/fargateService.ts",
        "ecs/image.ts",
        "ecs/metrics.ts",
        "ecs/service.ts",
        "ecs/taskDefinition.ts",

        "efs/index.ts",
        "efs/metrics.ts",

        "elasticloadbalancingv2/application.ts",
        "elasticloadbalancingv2/index.ts",
        "elasticloadbalancingv2/listener.ts",
        "elasticloadbalancingv2/listenerRule.ts",
        "elasticloadbalancingv2/loadBalancer.ts",
        "elasticloadbalancingv2/metrics.ts",
        "elasticloadbalancingv2/network.ts",
        "elasticloadbalancingv2/targetGroup.ts",
        "elasticloadbalancingv2/targetGroupAttachment.ts",

        "lambda/index.ts",
        "lambda/metrics.ts",
        "rds/index.ts",
        "rds/metrics.ts",
        "s3/index.ts",
        "s3/metrics.ts",
        "sns/index.ts",
        "sns/metrics.ts",
        "sqs/index.ts",
        "sqs/metrics.ts",
    ]
}

